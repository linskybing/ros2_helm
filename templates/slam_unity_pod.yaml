{{- if eq .Values.role "slam" }}
apiVersion: v1
kind: Pod
metadata:
  name: {{ .Values.pod.name }}
  labels:
    user: {{ .Values.labels.user }}
    app: pros_app
spec:
  nodeSelector:
    kubernetes.io/hostname: k8s-work1
  containers:
    - name: rplidar
      image: master.harbor.registry/ghcr/screamlab/pros_jetson_driver_image:0.1.0
      envFrom:
        - configMapRef:
            name: slam-env-config
      volumeMounts:
        - name: demo-volume
          mountPath: /workspace/demo
          readOnly: true
      command: ["/bin/bash", "-c"]
      args:
        - |
          source /opt/ros/humble/setup.bash && \
          source /workspaces/install/setup.bash && \
          ros2 launch /workspace/demo/rplidar_unity.xml
      resources:
        requests:
          ephemeral-storage: "200Mi"
        limits:
          ephemeral-storage: "1Gi"

    # -------------------- lidar-transform service --------------------
    - name: lidar-transform
      image: master.harbor.registry/ghcr/screamlab/pros_unity_lidar_trans_image:latest
      envFrom:
        - configMapRef:
            name: slam-env-config
      command: ["/bin/bash", "-c"]
      args:
        - |
          source /opt/ros/humble/setup.bash && \
          source /workspaces/install/setup.bash && \
          ros2 run unity_lidar_transformer lidar_transformer_node
      resources:
        requests:
          ephemeral-storage: "200Mi"
        limits:
          ephemeral-storage: "1Gi"

    # # -------------------- slam service --------------------
    - name: slam
      image: master.harbor.registry/ghcr/screamlab/pros_jetson_driver_image:0.1.0
      envFrom:
        - configMapRef:
            name: slam-env-config
      volumeMounts:
        - name: demo-volume
          mountPath: /workspace/demo
          readOnly: true
      command: ["/bin/bash", "-c"]
      args:
        - |
          source /opt/ros/humble/setup.bash && \
          source /workspaces/install/setup.bash && \
          ros2 launch /workspace/demo/slam.xml
      resources:
        requests:
          ephemeral-storage: "200Mi"
        limits:
          ephemeral-storage: "1Gi"

    # -------------------- rosbridge service --------------------
    - name: rosbridge
      image: master.harbor.registry/ghcr/screamlab/pros_jetson_driver_image:0.1.0
      envFrom:
        - configMapRef:
            name: slam-env-config
      ports:
        - containerPort: 9090
      command: ["/bin/bash", "-c"]
      args:
        - |
          source /opt/ros/humble/setup.bash && \
          source /workspaces/install/setup.bash && \
          ros2 launch rosbridge_server rosbridge_websocket_launch.xml
      resources:
        requests:
          ephemeral-storage: "200Mi"
        limits:
          ephemeral-storage: "1Gi"

  # -------------------- Shared volume definition --------------------
  volumes:
    - name: demo-volume
      hostPath:
        path: /home/work1/workspace/pros_app/docker/compose/demo # Replace with actual host path
        type: Directory
---
# Environment variable configuration (must create ConfigMap first)
apiVersion: v1
kind: ConfigMap
metadata:
  name: slam-env-config
data:
  ROS_DOMAIN_ID: "{{ .Values.domain.id }}"
  ROS_DISCOVERY_SERVER: "{{ .Values.discover.ip }}"
  RMW_IMPLEMENTATION: "rmw_fastrtps_cpp"
{{- end }}